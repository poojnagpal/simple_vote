{"ast":null,"code":"var _jsxFileName = \"/Users/ripplingadmin/voting-api/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, setMessage } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    votes: 0\n  });\n  const handleChange = e => {\n    const value = e.target.value;\n    setFormData(prevState => ({\n      ...prevState,\n      name: value\n    }));\n    console.log(formData);\n  };\n  useEffect(() => {\n    // Fetch the message from the Express server\n    fetch('http://localhost:3001/add_candidate').then(response => response.json()).then(data => setMessage(data.message)).catch(error => console.error('Error fetching data:', error));\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/add_candidate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        console.log(response);\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Success:', data);\n      // Handle success response, maybe clear form or show a success message\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle errors, maybe show an error message to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"Candidate\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D3PSq1sKSlCPNUoBh5MopDiXQFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","setMessage","jsxDEV","_jsxDEV","App","_s","formData","setFormData","name","votes","handleChange","e","value","target","prevState","console","log","fetch","then","response","json","data","message","catch","error","handleSubmit","preventDefault","method","headers","body","JSON","stringify","ok","Error","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_c","$RefreshReg$"],"sources":["/Users/ripplingadmin/voting-api/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, setMessage } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [formData, setFormData] = useState({\n    name: '',\n    votes: 0,\n  });\n\n  const handleChange = (e) => {\n    const  value  = e.target.value;\n    setFormData(prevState => ({\n      ...prevState,\n      name: value,\n    }));\n    console.log(formData)\n  };\n\n  useEffect(() => {\n    // Fetch the message from the Express server\n    fetch('http://localhost:3001/add_candidate')\n      .then(response => response.json())\n      .then(data => setMessage(data.message))\n      .catch(error => console.error('Error fetching data:', error));\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/add_candidate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n       \n        body: JSON.stringify(formData),\n      });\n      if (!response.ok) {\n        console.log(response)\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Success:', data);\n      // Handle success response, maybe clear form or show a success message\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle errors, maybe show an error message to the user\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"name\">Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"Candidate\"\n              value={formData.name}\n              onChange={handleChange}\n            />\n          </div>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAOC,KAAK,GAAID,CAAC,CAACE,MAAM,CAACD,KAAK;IAC9BL,WAAW,CAACO,SAAS,KAAK;MACxB,GAAGA,SAAS;MACZN,IAAI,EAAEI;IACR,CAAC,CAAC,CAAC;IACHG,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;EACvB,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd;IACAiB,KAAK,CAAC,qCAAqC,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIpB,UAAU,CAACoB,IAAI,CAACC,OAAO,CAAC,CAAC,CACtCC,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,YAAY,GAAG,MAAOd,CAAC,IAAK;IAChCA,CAAC,CAACe,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMF,KAAK,CAAC,qCAAqC,EAAE;QAClEU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QAEDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACzB,QAAQ;MAC/B,CAAC,CAAC;MACF,IAAI,CAACa,QAAQ,CAACa,EAAE,EAAE;QAChBjB,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;QACrB,MAAM,IAAIc,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMZ,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;MAClCL,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEK,IAAI,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B;IACF;EACF,CAAC;EAED,oBACErB,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBhC,OAAA;MAAQ+B,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BhC,OAAA;QAAMiC,QAAQ,EAAEX,YAAa;QAAAU,QAAA,gBAC3BhC,OAAA;UAAAgC,QAAA,gBACEhC,OAAA;YAAOkC,OAAO,EAAC,MAAM;YAAAF,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnCtC,OAAA;YACEuC,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,MAAM;YACTnC,IAAI,EAAC,WAAW;YAChBI,KAAK,EAAEN,QAAQ,CAACE,IAAK;YACrBoC,QAAQ,EAAElC;UAAa;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNtC,OAAA;UAAQuC,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACpC,EAAA,CAlEQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}