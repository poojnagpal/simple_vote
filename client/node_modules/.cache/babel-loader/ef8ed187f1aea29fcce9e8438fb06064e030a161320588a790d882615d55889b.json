{"ast":null,"code":"var _jsxFileName = \"/Users/ripplingadmin/voting-api/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, setMessage } from 'react';\nimport './App.css';\nimport { useCandidates } from './CandidatesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    votes: 0\n  });\n  const [candidates, setCandidates] = useState([]);\n  const [votes, setVotes] = useState('');\n  const handleChange = e => {\n    const value = e.target.value; // Destructure name and value from event target\n    setFormData(prevState => ({\n      ...prevState,\n      name: value // Use the input's name to update the corresponding property\n    }));\n  };\n  useEffect(() => {\n    // Fetch initial candidates list when the component mounts\n    const fetchCandidates = async () => {\n      const response = await fetch('http://localhost:3001/get-candidates');\n      const data = await response.json();\n      setCandidates(data);\n    };\n    fetchCandidates();\n  }, [setCandidates]);\n  const handleVote = async (name, e) => {\n    e.preventDefault();\n    console.log({\n      name: name\n    });\n    try {\n      const response = await fetch('http://localhost:3001/vote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name\n        })\n      });\n      const voteResult = await response.json();\n      console.log(voteResult);\n      const updatedCandidates = candidates.map(candidate => {\n        if (candidate.name === name) {\n          return {\n            ...candidate,\n            votes: voteResult.vote\n          };\n        }\n        return candidate;\n      });\n      setCandidates(updatedCandidates);\n      // console.log(name)\n      if (!response.ok) {\n        console.log(response);\n        throw new Error('Network response was not ok');\n      }\n      // Handle success response, maybe clear form or show a success message\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle errors, maybe show an error message to the user\n    }\n  };\n  useEffect(() => {\n    const fetchCandidates = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/get-candidates');\n        const candidatesData = await response.json();\n        setCandidates(candidatesData);\n      } catch (error) {\n        console.error('Error fetching candidates:', error);\n      }\n    };\n    fetchCandidates();\n  }, [formData]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/add_candidate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Assuming the addition was successful, fetch the updated list of candidates\n      const updatedCandidatesResponse = await fetch('http://localhost:3001/get-candidates');\n      if (!updatedCandidatesResponse.ok) {\n        throw new Error('Failed to fetch updated candidates');\n      }\n      const updatedCandidates = await updatedCandidatesResponse.json();\n      setCandidates(updatedCandidates); // Update the candidates state with the new list\n      // Optionally, reset the form data here if needed\n      setFormData({\n        name: '',\n        votes: 0\n      });\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"Candidate\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: 'blue',\n            color: 'white',\n            padding: '10px 20px',\n            margin: '10px',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [candidate.name, \" - Votes: \", candidate.votes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: 'blue',\n              color: 'white',\n              padding: '10px 20px',\n              margin: '10px',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            },\n            onClick: e => handleVote(candidate.name, e),\n            children: \"Update Vote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TA4vxNO6P+mHofKhK9OKR++OITY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","setMessage","useCandidates","jsxDEV","_jsxDEV","App","_s","formData","setFormData","name","votes","candidates","setCandidates","setVotes","handleChange","e","value","target","prevState","fetchCandidates","response","fetch","data","json","handleVote","preventDefault","console","log","method","headers","body","JSON","stringify","voteResult","updatedCandidates","map","candidate","vote","ok","Error","error","candidatesData","handleSubmit","updatedCandidatesResponse","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","style","backgroundColor","color","padding","margin","borderRadius","cursor","index","onClick","_c","$RefreshReg$"],"sources":["/Users/ripplingadmin/voting-api/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, setMessage } from 'react';\nimport './App.css';\nimport { useCandidates } from './CandidatesContext';\n\n\nfunction App() {\n  const [formData, setFormData] = useState({\n    name: '',\n    votes: 0,\n  });\n  const [candidates, setCandidates] = useState([]);\n  const [votes, setVotes] = useState('')\n\n\n  const handleChange = (e) => {\n    const value = e.target.value; // Destructure name and value from event target\n    setFormData(prevState => ({\n      ...prevState,\n      name: value, // Use the input's name to update the corresponding property\n    }));\n  };\n\n  useEffect(() => {\n    // Fetch initial candidates list when the component mounts\n    const fetchCandidates = async () => {\n      const response = await fetch('http://localhost:3001/get-candidates');\n      const data = await response.json();\n      setCandidates(data);\n    };\n    fetchCandidates();\n  }, [setCandidates]);\n\n  const handleVote = async (name, e) => {\n    e.preventDefault();\n    console.log({ name: name })\n\n    try {\n      const response = await fetch('http://localhost:3001/vote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name: name }),\n      });\n      const voteResult = await response.json();\n      console.log(voteResult)\n      const updatedCandidates = candidates.map(candidate => {\n        if (candidate.name === name) {\n          return { ...candidate, votes: voteResult.vote };\n        }\n        return candidate;\n      });\n      setCandidates(updatedCandidates);\n      // console.log(name)\n      if (!response.ok) {\n        console.log(response)\n        throw new Error('Network response was not ok');\n      }\n      // Handle success response, maybe clear form or show a success message\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle errors, maybe show an error message to the user\n    }\n    \n  \n  };\n  useEffect(() => {\n    const fetchCandidates = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/get-candidates');\n        const candidatesData = await response.json();\n        setCandidates(candidatesData);\n      } catch (error) {\n        console.error('Error fetching candidates:', error);\n      }\n    };\n\n    fetchCandidates();\n  }, [formData]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/add_candidate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Assuming the addition was successful, fetch the updated list of candidates\n      const updatedCandidatesResponse = await fetch('http://localhost:3001/get-candidates');\n      if (!updatedCandidatesResponse.ok) {\n        throw new Error('Failed to fetch updated candidates');\n      }\n      const updatedCandidates = await updatedCandidatesResponse.json();\n      setCandidates(updatedCandidates); // Update the candidates state with the new list\n      // Optionally, reset the form data here if needed\n      setFormData({ name: '', votes: 0 });\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"name\">Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"Candidate\"\n              value={formData.name}\n              onChange={handleChange}\n            />\n          </div>\n          <button style={{ backgroundColor: 'blue', color: 'white', padding: '10px 20px', margin: '10px', borderRadius: '5px', cursor: 'pointer' }} type=\"submit\">Submit</button>\n        </form>\n        <ul>\n          {candidates.map((candidate, index) => (\n            <div key={index}>\n              <li>{candidate.name} - Votes: {candidate.votes}</li>\n              <button style={{ backgroundColor: 'blue', color: 'white', padding: '10px 20px', margin: '10px', borderRadius: '5px', cursor: 'pointer' }} onClick={(e) => handleVote(candidate.name, e)}>Update Vote</button>\n            </div>\n          ))}\n        </ul>\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}