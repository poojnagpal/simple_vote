{"ast":null,"code":"var _jsxFileName = \"/Users/ripplingadmin/voting-api/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, setMessage } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [candidates, setCandidates] = useState({\n    name: '',\n    votes: 0\n  });\n  const [votes, setVotes] = useState('');\n  const handleChange = e => {\n    const value = e.target.value; // Destructure name and value from event target\n    setCandidates(prevState => ({\n      ...prevState,\n      name: value // Use the input's name to update the corresponding property\n    }));\n  };\n  useEffect(() => {\n    // Fetch the message from the Express server\n    fetch('http://localhost:3001/get-candidates').then(response => response.json()).then(candidates => setCandidates(candidates)).catch(error => console.error('Error fetching data:', error));\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const handleVote = async (name, e) => {\n    e.preventDefault();\n    console.log({\n      name: name\n    });\n    try {\n      const response = await fetch('http://localhost:3001/vote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name\n        })\n      });\n      const voteResult = await response.json();\n      console.log(voteResult);\n      const updatedCandidates = candidates.map(candidate => {\n        if (candidate.name === name) {\n          return {\n            ...candidate,\n            votes: voteResult.vote\n          };\n        }\n        return candidate;\n      });\n      setCandidates(updatedCandidates);\n      // console.log(name)\n      if (!response.ok) {\n        console.log(response);\n        throw new Error('Network response was not ok');\n      }\n      // Handle success response, maybe clear form or show a success message\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle errors, maybe show an error message to the user\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/add_candidate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      setCandidates(prevState => [...prevState, formData]);\n      if (!response.ok) {\n        console.log('response', response);\n        throw new Error('Network response was not ok');\n      }\n      // Handle success response, maybe clear form or show a success message\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle errors, maybe show an error message to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"Candidate\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: 'blue',\n            color: 'white',\n            padding: '10px 20px',\n            margin: '10px',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          onClick: handleSubmit,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [candidate.name, \" - Votes: \", candidate.votes]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                backgroundColor: 'blue',\n                color: 'white',\n                padding: '10px 20px',\n                margin: '10px',\n                borderRadius: '5px',\n                cursor: 'pointer'\n              },\n              onClick: e => handleVote(candidate.name, e),\n              children: \"Update Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MNy7Wfsy893bWxoEJjFHZnPpL3U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","setMessage","jsxDEV","_jsxDEV","App","_s","candidates","setCandidates","name","votes","setVotes","handleChange","e","value","target","prevState","fetch","then","response","json","catch","error","console","handleVote","preventDefault","log","method","headers","body","JSON","stringify","voteResult","updatedCandidates","map","candidate","vote","ok","Error","handleSubmit","formData","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","style","backgroundColor","color","padding","margin","borderRadius","cursor","onClick","index","_c","$RefreshReg$"],"sources":["/Users/ripplingadmin/voting-api/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, setMessage } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [candidates, setCandidates] = useState({\n    name: '',\n    votes: 0,\n  });\n  const [votes, setVotes] = useState('')\n\n\n  const handleChange = (e) => {\n    const value = e.target.value; // Destructure name and value from event target\n    setCandidates(prevState => ({\n      ...prevState,\n      name: value, // Use the input's name to update the corresponding property\n    }));\n  };\n\n  useEffect(() => {\n    // Fetch the message from the Express server\n    fetch('http://localhost:3001/get-candidates')\n      .then(response => response.json())\n      .then(candidates => setCandidates(candidates))\n      .catch(error => console.error('Error fetching data:', error));\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const handleVote = async (name, e) => {\n    e.preventDefault();\n    console.log({ name: name })\n\n    try {\n      const response = await fetch('http://localhost:3001/vote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name: name }),\n      });\n      const voteResult = await response.json();\n      console.log(voteResult)\n      const updatedCandidates = candidates.map(candidate => {\n        if (candidate.name === name) {\n          return { ...candidate, votes: voteResult.vote };\n        }\n        return candidate;\n      });\n      setCandidates(updatedCandidates);\n      // console.log(name)\n      if (!response.ok) {\n        console.log(response)\n        throw new Error('Network response was not ok');\n      }\n      // Handle success response, maybe clear form or show a success message\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle errors, maybe show an error message to the user\n    }\n    \n  \n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/add_candidate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n       \n        body: JSON.stringify(formData),\n      });\n      setCandidates(prevState => [...prevState, formData]);\n      if (!response.ok) {\n        console.log('response', response)\n        throw new Error('Network response was not ok');\n      }\n      // Handle success response, maybe clear form or show a success message\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle errors, maybe show an error message to the user\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"name\">Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"Candidate\"\n              value={formData.name}\n              onChange={handleChange}\n            />\n          </div>\n          <button style={{ backgroundColor: 'blue', color: 'white', padding: '10px 20px', margin: '10px', borderRadius: '5px', cursor: 'pointer' }} onClick={handleSubmit} type=\"submit\">Submit</button>\n\n      <ul>\n        {candidates.map((candidate, index) => (\n          <div>\n\n     <li key={index}>{candidate.name} - Votes: {candidate.votes}</li>\n          <button style={{ backgroundColor: 'blue', color: 'white', padding: '10px 20px', margin: '10px', borderRadius: '5px', cursor: 'pointer' }} onClick={(e) => handleVote(candidate.name, e)}>Update Vote</button>\n            </div>\n          ))}\n      </ul>\n      </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}